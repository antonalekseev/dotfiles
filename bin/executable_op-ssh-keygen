#!/bin/sh

ROUNDS=100

usage() {
	echo "Usage: $(basename "$0") [-e] -- NAME <ssh-keygen options ...>" 1>&2
	exit 1
}

# source: https://unix.stackexchange.com/a/476125
phrase=$(base64 < /dev/urandom | tr -d 'O0Il1+\' | head -c 44)

while getopts "e" opt; do
	case "$opt" in
	e)
		phrase=""
		;;
	*)
		usage
		;;
	esac
done
shift $((OPTIND - 1))

name="$1"
shift
[ -n "$name" ] || usage

pub=$(op document get "ssh_${name}_public" 2>/dev/null)
[ -z "$pub" ] || { echo "error: key ${name}_public already exists in 1Password."; exit 1; }

lastpwd="$PWD"
tmpdir=$(mktemp -d)
cd "$tmpdir" || { echo "error: can't cd to tmpdir"; exit 1; }

# source: https://gist.github.com/kraftb/9918106#gistcomment-2733298
mkfifo -m 0600 key key.pub &&
	(
		op document create key --title "ssh_${name}_private" --file-name "private"
		op document create key.pub --title "ssh_${name}_public" --file-name "public"
		[ -n "$phrase" ] &&  op item create --category password --title "ssh_${name}_phrase" "password=$phrase"
	) &
echo "y" | ssh-keygen -a "$ROUNDS" -N "$phrase" -C "${name}-$(date "+%Y%m%d%H%M%S")" -f key "$@"

rm key key.pub
cd "$lastpwd" || { echo "warn: can't cd back to last dir"; exit 0; }
rm -r "$tmpdir"
